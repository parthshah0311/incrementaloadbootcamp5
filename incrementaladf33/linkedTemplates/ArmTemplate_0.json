{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "incrementaladf33"
		},
		"ls_controltable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_controltable'"
		},
		"ls_prcsdsalesdata_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_prcsdsalesdata'"
		},
		"ls_salesdata_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_salesdata'"
		},
		"ls_controltable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "controlserver.database.windows.net"
		},
		"ls_controltable_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "controldatabase"
		},
		"ls_controltable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "parth"
		},
		"ls_prcsdsalesdata_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "controlserver.database.windows.net"
		},
		"ls_prcsdsalesdata_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "controldatabase"
		},
		"ls_prcsdsalesdata_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "parth"
		},
		"ls_salesdata_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "controlserver.database.windows.net"
		},
		"ls_salesdata_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "controldatabase"
		},
		"ls_salesdata_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "parth"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_controltable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_controltable_properties_typeProperties_server')]",
					"database": "[parameters('ls_controltable_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_controltable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_controltable_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_prcsdsalesdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_prcsdsalesdata_properties_typeProperties_server')]",
					"database": "[parameters('ls_prcsdsalesdata_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_prcsdsalesdata_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_prcsdsalesdata_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_salesdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_salesdata_properties_typeProperties_server')]",
					"database": "[parameters('ls_salesdata_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_salesdata_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_salesdata_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_controltable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_controltable",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "nvarchar"
					},
					{
						"name": "LastProcessedTimestamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ControlTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_controltable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processedsalesdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_prcsdsalesdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProcessedSalesTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_prcsdsalesdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_salesdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_salesdata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SalesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalAmount",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "LastUpdated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SalesData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_salesdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Incremental_Load_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_Last_Timestamp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT LastProcessedTimestamp FROM ControlTable WHERE TableName = 'SalesData';\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_controltable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get_Last_Timestamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM SalesData WHERE LastUpdated > '@{activity('Get_Last_Timestamp').output.firstRow.LastProcessedTimestamp}';\n\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"SalesID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_salesdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_processedsalesdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLastProcessedTimestamp]"
						},
						"linkedServiceName": {
							"referenceName": "ls_controltable",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(greaterOrEquals(int(formatDateTime(convertTimeZone(utcNow(), 'UTC', 'Eastern Standard Time'),'HH')), 12), less(int(formatDateTime(convertTimeZone(utcNow(), 'UTC', 'Eastern Standard Time'),'HH')), 15))\n",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Slacknotificationfailed",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://hooks.slack.com/services/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",
										"body": {
											"text": "❌ Data pipeline execution FAILED "
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "slacknotificationpassed",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": "https://hooks.slack.com/services/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",
										"body": "{\n  \"text\": \"🔔 Data pipeline execution completed successfully !\n}\n"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-03-26T21:08:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_controltable')]",
				"[concat(variables('factoryId'), '/datasets/ds_salesdata')]",
				"[concat(variables('factoryId'), '/datasets/ds_processedsalesdata')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_controltable')]"
			]
		}
	]
}