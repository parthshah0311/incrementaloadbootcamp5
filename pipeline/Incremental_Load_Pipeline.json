{
	"name": "Incremental_Load_Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Get_Last_Timestamp",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT LastProcessedTimestamp FROM ControlTable WHERE TableName = 'SalesData';\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_controltable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Get_Last_Timestamp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM SalesData WHERE LastUpdated > '@{activity('Get_Last_Timestamp').output.firstRow.LastProcessedTimestamp}';\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"SalesID"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_salesdata",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_processedsalesdata",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateLastProcessedTimestamp]"
				},
				"linkedServiceName": {
					"referenceName": "ls_controltable",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Stored procedure1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(greaterOrEquals(int(formatDateTime(convertTimeZone(utcNow(), 'UTC', 'Eastern Standard Time'),'HH')), 12), less(int(formatDateTime(convertTimeZone(utcNow(), 'UTC', 'Eastern Standard Time'),'HH')), 15))\n",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Slacknotificationfailed",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"url": "https://hooks.slack.com/services/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",
								"body": {
									"text": "‚ùå Data pipeline execution FAILED "
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "slacknotificationpassed",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "POST",
								"headers": {
									"application": "json"
								},
								"url": "https://hooks.slack.com/services/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",
								"body": "{\n  \"text\": \"üîî Data pipeline execution completed successfully !\n}\n"
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-03-26T21:08:12Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}